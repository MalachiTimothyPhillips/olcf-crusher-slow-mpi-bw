// Need to keep in sync with poly_imp.h

#if p_Nq == 2
static const dfloat z[] = {
  -1.0,
   1.0
};
#elif p_Nq == 3
static const dfloat z[] = {
  -1.0,
   0.0,
   1.0
};
#elif p_Nq == 4
static const dfloat z[] = {
  -1.0,
  -0.44721359549995793928183473374625524708812367192231,
   0.44721359549995793928183473374625524708812367192231,
   1.0
};
#elif p_Nq == 5
static const dfloat z[] = {
  -1.0,
  -0.65465367070797714379829245624685835556920808239542,
   0.0,
   0.65465367070797714379829245624685835556920808239542,
   1.0
};
#elif p_Nq == 6
static const dfloat z[] = {
  -1.0,
  -0.7650553239294646928510029739593381503657356885361,
  -0.28523151648064509631415099404087907191900347272643,
   0.28523151648064509631415099404087907191900347272643,
   0.7650553239294646928510029739593381503657356885361,
   1.0
};
#elif p_Nq == 7
static const dfloat z[] = {
  -1.0,
  -0.830223896278566929872032213967465139587170364872,
  -0.46884879347071421380377188190876632940559747167184,
   0.0,
   0.46884879347071421380377188190876632940559747167184,
   0.830223896278566929872032213967465139587170364872,
   1.0
};
#elif p_Nq == 8
static const dfloat z[] = {
  -1.0,
  -0.87174014850960661533744576122066343810378066967698,
  -0.59170018143314230214451073139795318994570098951733,
  -0.20929921790247886876865726034535125529554540508668,
   0.20929921790247886876865726034535125529554540508668,
   0.59170018143314230214451073139795318994570098951733,
   0.87174014850960661533744576122066343810378066967698,
   1.0
};
#elif p_Nq == 9
static const dfloat z[] = {
  -1.0,
  -0.8997579954114601573123452444183379580514802955661,
  -0.67718627951073775344588542709134245071102964761391,
  -0.36311746382617815871075206870865921302064227760088,
   0.0,
   0.36311746382617815871075206870865921302064227760088,
   0.67718627951073775344588542709134245071102964761391,
   0.8997579954114601573123452444183379580514802955661,
   1.0
};
#elif p_Nq == 10
static const dfloat z[] = {
  -1.0,
  -0.91953390816645881382893266082233813415354307544628,
  -0.73877386510550507500310617485983072501618510137693,
  -0.47792494981044449566117509273125799788677289333057,
  -0.16527895766638702462621976595817353323115034354948,
   0.16527895766638702462621976595817353323115034354948,
   0.47792494981044449566117509273125799788677289333057,
   0.73877386510550507500310617485983072501618510137693,
   0.91953390816645881382893266082233813415354307544628,
   1.0
};
#elif p_Nq == 11
static const dfloat z[] = {
  -1.0,
  -0.93400143040805913433227413609938363453991733010996,
  -0.78448347366314441862241781610845810350719745509406,
  -0.56523532699620500647096396947775166428305214556202,
  -0.2957581355869393914319115155590575089410064343486,
   0.0,
   0.2957581355869393914319115155590575089410064343486,
   0.56523532699620500647096396947775166428305214556202,
   0.78448347366314441862241781610845810350719745509406,
   0.93400143040805913433227413609938363453991733010996,
   1.0
};
#elif p_Nq == 12
static const dfloat z[] = {
  -1.0,
  -0.94489927222288222340758013830321871361125655195003,
  -0.81927932164400667834864158171690266069046665790364,
  -0.6328761530318606776624048544436558582438437454015,
  -0.39953094096534893226434979156696690052774803279531,
  -0.13655293285492755486406185573969389689841411128206,
   0.13655293285492755486406185573969389689841411128206,
   0.39953094096534893226434979156696690052774803279531,
   0.6328761530318606776624048544436558582438437454015,
   0.81927932164400667834864158171690266069046665790364,
   0.94489927222288222340758013830321871361125655195003,
   1.0
};
#elif p_Nq == 13
static const dfloat z[] = {
  -1.0,
  -0.95330984664216391189690546475544915162650788869736,
  -0.84634756465187231686592560709875335957803665971441,
  -0.68618846908175742607275903956635555292917619812438,
  -0.48290982109133620174693723363693362077219326211859,
  -0.24928693010623999256867370037422698148881131249298,
   0.0,
   0.24928693010623999256867370037422698148881131249298,
   0.48290982109133620174693723363693362077219326211859,
   0.68618846908175742607275903956635555292917619812438,
   0.84634756465187231686592560709875335957803665971441,
   0.95330984664216391189690546475544915162650788869736,
   1.0
};
#elif p_Nq == 14
static const dfloat z[] = {
  -1.0,
  -0.95993504526726090135510016201542438906639151857265,
  -0.86780105383034725100022020290826421324987235309444,
  -0.72886859909132614058467240052088159565733953169432,
  -0.55063940292864705531662270585908063446213831955391,
  -0.34272401334271284504390340364167464483311353414031,
  -0.11633186888370386765877670973616016794150904425628,
   0.11633186888370386765877670973616016794150904425628,
   0.34272401334271284504390340364167464483311353414031,
   0.55063940292864705531662270585908063446213831955391,
   0.72886859909132614058467240052088159565733953169432,
   0.86780105383034725100022020290826421324987235309444,
   0.95993504526726090135510016201542438906639151857265,
   1.0
};
#elif p_Nq == 15
static const dfloat z[] = {
  -1.0,
  -0.96524592650383857279585139206960117770765013599709,
  -0.88508204422297629882540163148222965198871408520748,
  -0.76351968995181520070411847597629161817736852031529,
  -0.60625320546984571112352993863673350717973103375992,
  -0.42063805471367248092189693873858041298433820549243,
  -0.21535395536379423822567944627291771265215790120304,
   0.0,
   0.21535395536379423822567944627291771265215790120304,
   0.42063805471367248092189693873858041298433820549243,
   0.60625320546984571112352993863673350717973103375992,
   0.76351968995181520070411847597629161817736852031529,
   0.88508204422297629882540163148222965198871408520748,
   0.96524592650383857279585139206960117770765013599709,
   1.0
};
#elif p_Nq == 16
static const dfloat z[] = {
  -1.0,
  -0.96956804627021793295224273836745924138899074650383,
  -0.89920053309347209299462826151984947674999760904514,
  -0.7920082918618150639310882709631457058080738279802,
  -0.65238870288249308946788321964058148032155801282957,
  -0.48605942188713761178189078584687469688897730429825,
  -0.29983046890076320809835345472230064781546097690778,
  -0.10132627352194944784303300504591776253324091440019,
   0.10132627352194944784303300504591776253324091440019,
   0.29983046890076320809835345472230064781546097690778,
   0.48605942188713761178189078584687469688897730429825,
   0.65238870288249308946788321964058148032155801282957,
   0.7920082918618150639310882709631457058080738279802,
   0.89920053309347209299462826151984947674999760904514,
   0.96956804627021793295224273836745924138899074650383,
   1.0
};
#endif

inline void lagrange_eval(@restrict dfloat * p0,
                   @restrict const dfloat * w,
                   dfloat x,
                   dlong i){
  dfloat p_i = (1 << (p_Nq-1));
  for(dlong j=0;j<p_Nq;++j){
    dfloat d_j = x-z[j];
    p_i *= j==i ? 1 : d_j;
  }
  p0[i] = w[i] * p_i;
}

inline void lagrange_eval_first_derivative(@restrict dfloat * p0,
                   @restrict const dfloat * w,
                   dfloat x,
                   dlong i){
  dfloat u0=1, u1=0;
  for(dlong j=0;j<p_Nq;++j){
    if(i!=j){
      dfloat d_j = 2*(x-z[j]);
      u1 = d_j*u1+u0;
      u0 = d_j*u0;
    }
  }
  dfloat *p1 = p0+p_Nq;
  p0[i] =   w[i]*u0;
  p1[i] = 2*w[i]*u1;
}

inline void lagrange_eval_second_derivative(@restrict dfloat * p0,
                   @restrict const dfloat * w,
                   dfloat x,
                   dlong i){
  dfloat u0=1, u1=0, u2=0;
  for(dlong j=0;j<p_Nq;++j){
    if(i!=j){
      dfloat d_j = 2*(x-z[j]);
      u2 = d_j*u2 + u1;
      u1 = d_j*u1 + u0;
      u0 = d_j*u0;
    }
  }
  dfloat *p1 = p0+p_Nq, *p2 = p0+2*p_Nq;
  p0[i]=  w[i]*u0;
  p1[i]=2*w[i]*u1;
  p2[i]=8*w[i]*u2;
}