//
// nekRS User Defined File
//
#include <math.h>
#include "udf.hpp"
#include "casedata.h"
#include "ci.inc"

/* User Functions */

void userf(nrs_t *nrs, dfloat time, occa::memory o_U, occa::memory o_FU)
{
  mesh_t* mesh = nrs->meshV;
  dfloat mue, rho;
  platform->options.getArgs("VISCOSITY", mue);
  platform->options.getArgs("DENSITY", rho);
  const dfloat RE_B = rho/mue; 
  const dfloat DPDZ = 4 * (2*RE_TAU/RE_B)*(2*RE_TAU/RE_B);

  occa::memory o_FUz = o_FU + 2*nrs->fieldOffset*sizeof(dfloat);
  platform->linAlg->fill(mesh->Nlocal, DPDZ, o_FUz);
}

/* UDF Functions */                                                      

void UDF_LoadKernels(nrs_t *nrs)
{
}

void UDF_Setup0(MPI_Comm comm, setupAide &options)
{
  options.getArgs("CI-MODE", ciMode);
  if (ciMode) ciSetup(comm, options);
}

void UDF_Setup(nrs_t *nrs)
{
  if(platform->options.compareArgs("CONSTANT FLOW RATE", "FALSE")){
    // assign function pointer to drive flow by constant mean pressure gradient
    udf.uEqnSource = &userf;
  }
}

void UDF_ExecuteStep(nrs_t *nrs, dfloat time, int tstep)
{
  if (nrs->lastStep)
    if (ciMode) ciTestErrors(nrs, time, tstep);
}
