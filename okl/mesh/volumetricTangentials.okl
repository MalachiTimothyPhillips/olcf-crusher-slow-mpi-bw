@kernel void volumetricTangentials(const dlong N,
                   @restrict const dfloat *normals,
                   @restrict dfloat *tangentials)
{
  for(dlong n=0;n<N;++n;@tile(p_blockSize,@outer,@inner)){

    const dfloat nx = normals[n + 0 * N];
    const dfloat ny = normals[n + 1 * N];
    const dfloat nz = normals[n + 2 * N];

    const dfloat magN = sqrt(nx * nx + ny * ny + nz * nz);

    const dfloat tolN = 1e-6;

    if(magN > tolN){

      const dfloat tol = 1e-3;

      if(abs(abs(nz)-1) < tol){
        tangentials[n + 0 * N] = 1.0;
        tangentials[n + 1 * N] = 0.0;
        tangentials[n + 2 * N] = 0.0;
      }
      else{
        const dfloat mag = sqrt(nx * nx + ny * ny);
        const dfloat invMag = 1.0 / mag;
        tangentials[n + 0 * N] = -ny * invMag;
        tangentials[n + 1 * N] =  nx * invMag;
        tangentials[n + 2 * N] =  0.0;
      }
    }

  }
}
