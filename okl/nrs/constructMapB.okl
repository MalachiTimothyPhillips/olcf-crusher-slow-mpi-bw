int mymin(int a, int b){
  return a < b ? a : b;
}

@kernel void constructMapB(const dlong Nelements,
                                         @restrict const int*  EToB,
                                         @restrict const int*  faceNodes,
                                         @restrict int*  mapB)
{
  for(dlong e = 0; e < Nelements; e++; @outer(0)) {
    for(int m = 0; m < p_Nfp; ++m; @inner(0)) {
      for(int n = 0; n < p_Nq; ++n){
        const dlong qp = n + m * p_Nq;
        mapB[qp] = p_largeNumber;
      }
    }

    @barrier("local");

    for(int f = 0; f < p_Nfaces; f++) {
      for(int m = 0; m < p_Nfp; ++m; @inner(0)) {
        const dlong bcType = EToB[f + p_Nfaces * e];

        if(bcType > 0){
          int fid = faceNodes[m + f * p_Nfp];
          mapB[fid + e * p_Np] = mymin(bcType, mapB[fid + e * p_Np]);
        }

      }
      @barrier("global");
    }
  }

}
